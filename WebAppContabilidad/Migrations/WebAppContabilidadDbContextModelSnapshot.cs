// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAppContabilidad.Data;

namespace WebAppContabilidad.Migrations
{
    [DbContext(typeof(WebAppContabilidadDbContext))]
    partial class WebAppContabilidadDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAppContabilidad.Models.CuentaContable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(11,2)");

                    b.Property<int?>("CuentaMayor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<bool>("PermiteTransacciones")
                        .HasColumnType("bit");

                    b.Property<int?>("TipoDeCuenta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CuentaMayor");

                    b.HasIndex("TipoDeCuenta");

                    b.ToTable("CuentaContable");
                });

            modelBuilder.Entity("WebAppContabilidad.Models.SistemaAuxiliar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SistemaAuxiliar");
                });

            modelBuilder.Entity("WebAppContabilidad.Models.TipoDeCuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("Origen")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TipoDeCuenta");
                });

            modelBuilder.Entity("WebAppContabilidad.Models.TipoDeMoneda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<decimal>("TasaDeCambio")
                        .HasColumnType("decimal(11,2)");

                    b.HasKey("Id");

                    b.ToTable("TipoDeMoneda");
                });

            modelBuilder.Entity("WebAppContabilidad.Models.CuentaContable", b =>
                {
                    b.HasOne("WebAppContabilidad.Models.CuentaContable", "CuentaMayorNavigation")
                        .WithMany("InverseCuentaMayorNavigation")
                        .HasForeignKey("CuentaMayor");

                    b.HasOne("WebAppContabilidad.Models.TipoDeCuenta", "TipoDeCuentaNavigation")
                        .WithMany("CuentasContables")
                        .HasForeignKey("TipoDeCuenta");

                    b.Navigation("CuentaMayorNavigation");

                    b.Navigation("TipoDeCuentaNavigation");
                });

            modelBuilder.Entity("WebAppContabilidad.Models.CuentaContable", b =>
                {
                    b.Navigation("InverseCuentaMayorNavigation");
                });

            modelBuilder.Entity("WebAppContabilidad.Models.TipoDeCuenta", b =>
                {
                    b.Navigation("CuentasContables");
                });
#pragma warning restore 612, 618
        }
    }
}
